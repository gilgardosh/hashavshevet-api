/* tslint:disable */
/* eslint-disable */
/**
 * WizCloud Authentication
 * ensure authentication
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface CreateSessionWizKeyCompanyGetRequest {
    wizKey: object;
    company: object;
}

/**
 * no description
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Returns a Token
     */
    async createSessionWizKeyCompanyGetRaw(requestParameters: CreateSessionWizKeyCompanyGetRequest): Promise<runtime.ApiResponse<string>> {
        if (requestParameters.wizKey === null || requestParameters.wizKey === undefined) {
            throw new runtime.RequiredError('wizKey','Required parameter requestParameters.wizKey was null or undefined when calling createSessionWizKeyCompanyGet.');
        }

        if (requestParameters.company === null || requestParameters.company === undefined) {
            throw new runtime.RequiredError('company','Required parameter requestParameters.company was null or undefined when calling createSessionWizKeyCompanyGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/createSession/{wizKey}/{company}`.replace(`{${"wizKey"}}`, encodeURIComponent(String(requestParameters.wizKey))).replace(`{${"company"}}`, encodeURIComponent(String(requestParameters.company))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Returns a Token
     */
    async createSessionWizKeyCompanyGet(requestParameters: CreateSessionWizKeyCompanyGetRequest): Promise<string> {
        const response = await this.createSessionWizKeyCompanyGetRaw(requestParameters);
        return await response.value();
    }

}
